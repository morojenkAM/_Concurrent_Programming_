<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ff6fbceb-82b4-45f4-842c-b3dbf06543e3" name="Changes" comment="Changes">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/ArrayProblem/IntermediateSuma.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/ArrayProblem/IntermediateSuma.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/Cinema/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/Cinema/Main.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/Cinema/OptimisticLocking.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/Cinema/OptimisticLocking.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/Cinema/PessimisticLocking.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/ro/developmentfactory/Cinema/PessimisticLocking.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Concurrent-Programing" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Concurrent-Programing" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Concurrent-Programing" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="verification" type="c8890929:TasksNode$1" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Concurrent-Programing" type="f1a62948:ProjectNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Concurrent-Programing" type="f1a62948:ProjectNode" />
                <item name="Dependencies" type="6de06a37:ExternalSystemViewDefaultContributor$MyDependenciesNode" />
                <item name="compileClasspath" type="62daadca:ExternalSystemViewDefaultContributor$DependencyScopeExternalSystemNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="ChangeFirstPart" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/main/java/ro/developmentfactory/Cinema/MainCinema.java" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2i8tVlIHCrX4NMfgal9GDU5oRSK" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.MainCynema.executor": "Run",
    "Application.ro.developmentfactory.Cinema.MainCynema.executor": "Run",
    "Gradle.Build Concurrent-Programing.executor": "Run",
    "Gradle.Concurrent-Programing [:Main.main()].executor": "Run",
    "Gradle.Concurrent-Programing [:MainCinema.main()].executor": "Run",
    "Gradle.Concurrent-Programing [:MainCynema.main()].executor": "Run",
    "Gradle.Concurrent-Programing [test].executor": "Run",
    "Gradle.Download Sources.executor": "Run",
    "OpenRewrite.Faces2xMigrationToJakarta4x.executor": "Run",
    "OpenRewrite.JavaxTransactionMigrationToJakartaTransaction.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "FirstPart",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/Alisa/Learn_Java_Course",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "C:/Users/Alisa/IdeaProjects/Concurrent-Programing/src/main/java/ro/developmentfactory/Main.java",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "reference.settingsdialog.project.gradle",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Application.ro.developmentfactory.Cinema.Main">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ro.developmentfactory.ArrayProblem.Main" />
      <module name="Concurrent-Programing.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ro.developmentfactory.ArrayProblem.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MainCinema" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ro.developmentfactory.Cinema.MainCinema" />
      <module name="Concurrent-Programing.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ro.developmentfactory.Cinema.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ro.developmentfactory.Cinema.Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ro.developmentfactory.Cinema.Main" />
      <module name="Concurrent-Programing.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ro.developmentfactory.Cinema.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ro.developmentfactory.Cinema.MainCynema" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="ro.developmentfactory.Cinema.MainCynema" />
      <module name="Concurrent-Programing.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="ro.developmentfactory.Cinema.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Concurrent-Programing [test]" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="--info" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value="test" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>true</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>false</RunAsTest>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ro.developmentfactory.Cinema.Main" />
        <item itemvalue="Application.ro.developmentfactory.Cinema.MainCynema" />
        <item itemvalue="Application.Main" />
        <item itemvalue="Application.MainCinema" />
        <item itemvalue="Gradle.Concurrent-Programing [test]" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240" />
        <option value="bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ff6fbceb-82b4-45f4-842c-b3dbf06543e3" name="Changes" comment="" />
      <created>1718884060231</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1718884060231</updated>
      <workItem from="1718884061311" duration="6321000" />
      <workItem from="1719068058856" duration="340000" />
      <workItem from="1719074280837" duration="1382000" />
      <workItem from="1719077381004" duration="1880000" />
      <workItem from="1719135045903" duration="7468000" />
      <workItem from="1719142977030" duration="17224000" />
      <workItem from="1719221197900" duration="1596000" />
      <workItem from="1719316892442" duration="1036000" />
      <workItem from="1719317946481" duration="11584000" />
    </task>
    <task id="LOCAL-00001" summary="Other">
      <option name="closed" value="true" />
      <created>1718884179808</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1718884179808</updated>
    </task>
    <task id="LOCAL-00002" summary="Problem 1&#10;We would like to provide our customers the possibility to book tickets to our Cinema online. We have 100 seats in our Cinema numbered from 1 to 100. For simplicity, we can ignore booking a specific seat so a client can request several seats without specifying numbers. You need to build a small booking service that should&#10;Securely book one or several seats a client requested&#10;Return one error when the Cinema does not have enough free seats but the number is less than 100&#10;Return another error when a client tried to book more than 100 seats&#10;Please solve this with both optimistic and pessimistic locking primitives Java has; explain in which real-life case you would pick one over the other&#10;What is important in code&#10;How you address concurrency&#10;How you structure your code&#10;How you validate and handle errors&#10;How you handle multiple returns&#10;If the code is simple enough and easy to read&#10;Problem 2&#10;Write a program that will accept a large array of integers as input and will calculate the sum of all integers in 5 threads, then add the result together, returning the sum.&#10;Examples:&#10;Array: 23 45 67 89 12 34 56 78 90 1 &#10;Sum: 495">
      <option name="closed" value="true" />
      <created>1718885195347</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1718885195347</updated>
    </task>
    <task id="LOCAL-00003" summary="Changes">
      <option name="closed" value="true" />
      <created>1719328978730</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1719328978730</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Other" />
    <MESSAGE value="Problem 1&#10;We would like to provide our customers the possibility to book tickets to our Cinema online. We have 100 seats in our Cinema numbered from 1 to 100. For simplicity, we can ignore booking a specific seat so a client can request several seats without specifying numbers. You need to build a small booking service that should&#10;Securely book one or several seats a client requested&#10;Return one error when the Cinema does not have enough free seats but the number is less than 100&#10;Return another error when a client tried to book more than 100 seats&#10;Please solve this with both optimistic and pessimistic locking primitives Java has; explain in which real-life case you would pick one over the other&#10;What is important in code&#10;How you address concurrency&#10;How you structure your code&#10;How you validate and handle errors&#10;How you handle multiple returns&#10;If the code is simple enough and easy to read&#10;Problem 2&#10;Write a program that will accept a large array of integers as input and will calculate the sum of all integers in 5 threads, then add the result together, returning the sum.&#10;Examples:&#10;Array: 23 45 67 89 12 34 56 78 90 1 &#10;Sum: 495" />
    <MESSAGE value="Changes" />
    <option name="LAST_COMMIT_MESSAGE" value="Changes" />
  </component>
</project>